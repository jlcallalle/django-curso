##INSTALAR PYTHON 3
add-apt-repository -y ppa:jonathonf/python-3.6
apt-get update -y
apt-get install -y python3.6
apt-get install -y python3.6-dev
apt-get install -y python3.6-distutils

sudo apt-get install python3-pip
sudo pip3 install virtualenv 

## Verificaci√≥n de la descarga
1. Correr `python3 --version` // Python 3.6.8
2. Correr `pip3 --version`  // 

## Entorno virtual
1. Correr `python3 -m venv ENTORNO` donde `ENTORNO` sea el nombre deseado
2. Correr `source ENTORNO/bin/activate` para activar el entorno
3. Correr `deactivate` para desactivar el entorno



##Crear Entorno Virtual
$ python3 -m venv .env

##Activar entorno virtual
$ source .env/bin/activate 

##Desactivar entorno virtual
$ deactivate

Instalar Django
------------------
pip install django -U
pip freeze (ver librerias instaladas)

Django==2.2.5
pkg-resources==0.0.0
pytz==2019.2
sqlparse==0.3.0

# django-admin: interfaz que permite correr otros subcomandos

[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    runserver
    sendtestemail
    shell
    showmigrations
    sqlflush
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    test
    testserver

En carpeta platzigram
django-admin startproject

$ django-admin startproject platzigram .

Se crear folder llamado platzigram
__init__.py : el objetivo es declarar platzigram como modulo depython
settings.py : define todas las configuraciones

urls.py : punto de entrada para todas las peticiones, va tratar de buscar la url requerida y va tratar de encontrarla con su vista correspondiente
wsgi.py : archivo usado para el deployment para produccion
manage.py : nunca tocaremos, una interfaz con django-admin
settings.py : archivos de configuracion


python3 manage.py 
[auth]
    changepassword
    createsuperuser

[contenttypes]
    remove_stale_contenttypes

[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    sendtestemail
    shell
    showmigrations
    sqlflush
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    test
    testserver

[sessions]
    clearsessions

[staticfiles]
    collectstatic
    findstatic
    runserver



*********** url.py  ***********
"""platzigram URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/2.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""

URL.PY
Una vista en DJango puede ser FUNCIONES O CLASES, una funcion mas sencillo

Que es instancia de la clase Httpresponse

*Instalar aLinter PEP8*
 /home/jorge/PycharmProjects/crud-minsa/venv/bin/python3.6 -m pip install -U pep8